var maxHeightvideo; function isRealValue(obj) {   return obj && obj !== 'null' && obj !== 'undefined'; } function randome_unique(){ 	var arr = [] 	while(arr.length < 10){ 	    var randomnumber = Math.floor(Math.random()*100) + 1; 	    if(arr.indexOf(randomnumber) > -1) continue; 	    arr[arr.length] = randomnumber; 	} 	return arr[0]; } var _e_fb_check = document.getElementsByClassName("fb-messenger-checkbox")[0]; var att = document.createAttribute("user_ref"); var rand = randome_unique();   att.value = rand;                          //_e_fb_check.setAttributeNode(att); //console.log(_e_fb_check); //setTimeout(randome_unique,1000); //2. This code loads the IFrame Player API code asynchronously.       var tag = document.createElement('script');       tag.src = "https://www.youtube.com/iframe_api";       var firstScriptTag = document.getElementsByTagName('script')[0];       firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);       // 3. This function creates an <iframe> (and YouTube player)       //    after the API code downloads.       //var playlist = ['QB5Ytz9RuvE','J0brmOCD8CM','WHCugZXzGtE','CagYKzAQhQs','uOg6PcHJoJU']       //var playlist = [];       var player;       var _width = (window.innerWidth > 0) ? window.innerWidth : screen.width;       var _height = (window.innerHeight > 0) ? window.innerHeight : screen.height;       var index_play = -1;       var maxmodal;       var maxHeightvideo;       var h_list_video = 0;       var _e_list_video = document.getElementsByClassName('list-video')[0];       //console.log(_e_list_video);       if(_e_list_video){         _e_h_list_video = _e_list_video.getBoundingClientRect();         h_list_video = _e_h_list_video.height;       }       console.log("h_list_video="+h_list_video.height);      if(_width > _height ) {        if( h_list_video > 0){           maxHeightvideo = h_list_video;         } else if (_width > 996 && _width <= 1366) {           maxHeightvideo = _height*0.9;           console.log(maxHeightvideo);         }else{          maxHeightvideo = _height*0.7;        }      } else{         maxHeightvideo = _width*0.7;         //maxHeightvideo = h_list_video;         maxmodal = _width*0.9;      }       //var _width = 390;       var previousIndex = 0;       // function onYouTubeIframeAPIReady() {       //   player = new YT.Player('player', {       //     height: maxHeightvideo,       //     width: '100%',       //     playerVars: {       //       color: 'white',       //       rel: 0,       //       //controls:0,       //       playlist: playlist.join(','),       //     },       //     events: {       //       'onReady': onPlayerReady       //       //'onStateChange': onPlayerStateChange       //     }       //   });       // }       //onYouTubeIframeAPIReady(idv);       // 4. The API will call this function when the video player is ready.       function onPlayerReady(event) {         //event.target.playVideo();         index_play = 0;       }       // 5. The API calls this function when the player's state changes.       //    The function indicates that when playing a video (state=1),       //    the player should play for six seconds and then stop.       var done = false;       // function onPlayerStateChange(event) {       //   if (event.data == YT.PlayerState.PLAYING && !done) {       //     //setTimeout(stopVideo, 100);       //     stopVideo();       //     done = true;       //   }       // }       function onPlayerStateChange(event) {         if (event.data == YT.PlayerState.PLAYING && !done) {           setTimeout(stopVideo, 1000);           done = true;         }         if(event.data == -1 || event.data == 0) {                     // get current video index                     var index = player.getPlaylistIndex();                     var le = player.getPlaylist().length-1;                     // update when playlists do not match                     if(player.getPlaylist().length != playlist.length) {                         // update playlist and start playing at the proper index                         player.loadPlaylist(playlist, previousIndex+1);                     }                     /*                     keep track of the last index we got                     if videos are added while the last playlist item is playing,                     the next index will be zero and skip the new videos                     to make sure we play the proper video, we use "last index + 1"                     */                     //console.log(player.getPlaylist().length+","+playlist.length);                     previousIndex = index;                 }     }       function stopVideo() {         player.stopVideo();       }     function play_index(index) {         player.playVideoAt(index);            }  //var _player = document.getElementById("player");  function scrollplay(){         if(index_play < 0 ){             return false;         }            var element = document.getElementById("player");            var rect = element.getBoundingClientRect();         var height = window.innerHeight;         //console.log('rect_top='+rect.top+",rect.bottom"+rect.bottom+',h_windown='+height);         if(rect.top > 0 && rect.bottom < height){                          //e_bgimg.style.display = "none";              //_player.style.display = "block";              play_index(index_play);         }else{             //e_bgimg.style.display = "block";             //_player.style.display = "none";             stopVideo();         } } // When the DOM is ready, run this function $(document).ready(function() {   //Set the carousel options   // $('#quote-carousel').carousel({   //   pause: true,   //   interval: 4000,   // });   $(".video-bg").find("a.btn-video").click(function(event){       event.preventDefault();       var href = $(this).attr('href');       index_play = href.substring(1, 2);       //$("#modal_player").modal("show");       //$(".modal-content").css({'width':maxmodal,'margin':'0px auto'});       play_index(index_play);   }); $(".video-bg").find("a.link-video").click(function(event){       event.preventDefault();       var href = $(this).attr('href');       index_play = href.substring(1, 2);       //$("#modal_player").modal("show");       //$(".modal-content").css({'width':maxmodal,'margin':'0px auto'});       play_index(index_play);   });   // $(".modal-form-player").find("button.close").click(function(event){   //     event.preventDefault();   //      stopVideo();   // });   //$('[data-toggle="tooltip"]').tooltip(); });       